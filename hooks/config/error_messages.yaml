# Error messages configuration for Claude hooks
# All error messages used throughout the hook system

# File system protection errors
claude_edit_disabled:
  message: "BLOCKED: Editing .claude files is disabled"
  hint: "Set ENABLE_CLAUDE_EDIT=true in .env.claude to allow editing"

env_file_subfolder:
  message: "BLOCKED: .env* files must be created in project root only"
  hint: "Place environment files in the project root directory"

env_file_access:
  message: "BLOCKED: Access to .env* files containing sensitive data is prohibited"
  hint: "Use .env.sample for template files instead"

env_file_blocked:
  message: "BLOCKED: Access to {filename} is prohibited for security reasons"
  hint: "Environment files contain sensitive credentials and should not be accessed directly"

root_file_creation:
  message: "BLOCKED: Creating files in project root is restricted"
  hint: "Place files in appropriate subdirectories (e.g., ai_docs/, src/, tests/)"

root_folder_creation:
  message: "BLOCKED: Creating folders in project root is not allowed"
  hint: "All necessary project folders should already exist"

root_file_blocked:
  message: "BLOCKED: File '{filename}' is not allowed in project root"
  hint: "Allowed root files: {allowed_files}"

unique_root_file:
  message: "BLOCKED: {file} can only exist in project root"
  hint: "This file already exists in root. Edit the existing file instead of creating a duplicate"

subfolder_ai_docs:
  message: "BLOCKED: 'ai_docs' folder can only exist in project root"
  hint: "Use the existing ai_docs folder in the project root for documentation"

docs_folder:
  message: "BLOCKED: Creating 'docs' folders is prohibited"
  hint: "Use 'ai_docs' folder in project root for all documentation"

md_not_in_ai_docs:
  message: "BLOCKED: ALL .md files must be in ai_docs folder"
  hint: "Place documentation in ai_docs/{category}/*.md"
  examples:
    - "ai_docs/api-integration/auth.md"
    - "ai_docs/troubleshooting-guides/setup-issues.md"

invalid_ai_docs_folder:
  message: "BLOCKED: Invalid folder name in ai_docs"
  hint: "Folder names in ai_docs must use kebab-case (lowercase-with-dashes)"
  valid_examples:
    - "api-integration"
    - "test-results"
    - "setup-guides"
  invalid_examples:
    - "API_Integration"
    - "Test Results"
    - "SetupGuides"

test_wrong_location:
  message: "BLOCKED: Test files must be in designated test directories"
  hint: "Place test files in approved test directories"
  valid_paths:
    - "agenthub_main/src/tests"
    - "agenthub-frontend/src/tests"

venv_wrong_location:
  message: "BLOCKED: Virtual environment must be in agenthub_main/.venv"
  hint: "Create .venv only at: agenthub_main/.venv"

logs_not_in_root:
  message: "BLOCKED: 'logs' folder can only exist in project root"
  hint: "Use the logs folder in project root for all log files"

sh_not_in_scripts:
  message: "BLOCKED: Shell scripts must be in scripts/ or docker-system/ folders"
  hint: "Place .sh files in scripts/ or docker-system/ folders"

dangerous_rm:
  message: "BLOCKED: Dangerous rm -rf command detected"
  hint: "This command could delete critical system files. Use specific paths and verify before deletion"

dangerous_rm_blocked:
  message: "BLOCKED: Dangerous rm command that could delete critical files"
  hint: "The rm command with -rf flags can delete important files. Be specific with paths and verify targets before deletion"

documentation_required:
  message: "BLOCKED: Documentation update required"
  hint: "This {type} has existing documentation that must be updated before modification"
  action: "Update documentation at: {doc_path}"

# Tool usage and permission errors
tool_permission_denied:
  message: "BLOCKED: Tool '{tool}' is not available for agent '{agent}'"
  hint: "Each agent type has restricted tool access for security and workflow integrity"
  action: "Available tools: {available_tools}"

agent_not_loaded:
  message: "BLOCKED: No agent loaded - please call mcp__agenthub_http__call_agent first"
  hint: "Initialize your agent role before attempting any work"
  action: "Call mcp__agenthub_http__call_agent with appropriate agent name"

# MCP task management errors
task_not_found:
  message: "ERROR: Task with ID '{task_id}' not found"
  hint: "Verify the task ID is correct and the task still exists"

task_already_completed:
  message: "ERROR: Task '{task_id}' is already completed"
  hint: "Cannot modify a completed task. Create a new task for additional work"

invalid_task_status:
  message: "ERROR: Invalid task status '{status}'"
  hint: "Valid statuses: todo, in_progress, blocked, review, testing, done, cancelled"

# Configuration and system errors
config_load_error:
  message: "ERROR: Failed to load configuration '{config_name}'"
  hint: "Check that the configuration file exists and has valid YAML syntax"

yaml_parse_error:
  message: "ERROR: YAML parsing error in configuration '{config_file}'"
  hint: "Verify the YAML syntax is correct and all indentation is consistent"

cache_error:
  message: "WARNING: Configuration cache error"
  hint: "Falling back to direct file loading. Performance may be impacted"

# Network and service errors
mcp_connection_error:
  message: "ERROR: Unable to connect to MCP server"
  hint: "Verify the MCP server is running and network connectivity is available"

api_timeout_error:
  message: "ERROR: API request timeout after {timeout}s"
  hint: "Check network connectivity and try again. Consider increasing timeout if needed"

service_unavailable:
  message: "ERROR: Service '{service}' is temporarily unavailable"
  hint: "Please try again later. If the problem persists, check service status"